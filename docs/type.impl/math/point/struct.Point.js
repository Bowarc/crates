(function() {var type_impls = {
"math":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3Cf64%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#260-269\">source</a><a href=\"#impl-Add%3Cf64%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#263-268\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<f64>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#243-252\">source</a><a href=\"#impl-Add-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#246-251\">source</a><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#253-258\">source</a><a href=\"#impl-AddAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#254-257\">source</a><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-Clone-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/clone.rs.html#172\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.81.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-Debug-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-Default-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.81.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#369-373\">source</a><a href=\"#impl-Display-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#370-372\">source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.81.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.81.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3Cf64%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#318-327\">source</a><a href=\"#impl-Div%3Cf64%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#321-326\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<f64>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#301-310\">source</a><a href=\"#impl-Div-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#304-309\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, other: <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#311-316\">source</a><a href=\"#impl-DivAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#312-315\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(f32,+f32)%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#200-207\">source</a><a href=\"#impl-From%3C(f32,+f32)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#201-206\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f32.html\">f32</a>)) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(f32, f32)>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(f64,+f64)%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#208-215\">source</a><a href=\"#impl-From%3C(f64,+f64)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>)&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#209-214\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>)) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(f64, f64)>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(u32,+u32)%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#192-199\">source</a><a href=\"#impl-From%3C(u32,+u32)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>)&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#193-198\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u32.html\">u32</a>)) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(u32, u32)>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(u64,+u64)%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#222-229\">source</a><a href=\"#impl-From%3C(u64,+u64)%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;(<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>)&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#223-228\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: (<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.u64.html\">u64</a>)) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(u64, u64)>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf64%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#236-240\">source</a><a href=\"#impl-From%3Cf64%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#237-239\">source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<f64>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Linear-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/interpolation.rs.html#43-52\">source</a><a href=\"#impl-Linear-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"math/interpolation/trait.Linear.html\" title=\"trait math::interpolation::Linear\">Linear</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.interp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/interpolation.rs.html#44-46\">source</a><a href=\"#method.interp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"math/interpolation/trait.Linear.html#tymethod.interp\" class=\"fn\">interp</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Interpolate the value.  t should always be a number\nbetween 0.0 and 1.0, normalized for whatever actual\nvalue is the “end” of the interpolation.</div></details><section id=\"method.interp_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/interpolation.rs.html#47-51\">source</a><a href=\"#method.interp_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"math/interpolation/trait.Linear.html#tymethod.interp_between\" class=\"fn\">interp_between</a>(v1: Self, v2: Self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize_interp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/interpolation.rs.html#19-22\">source</a><a href=\"#method.normalize_interp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"math/interpolation/trait.Linear.html#method.normalize_interp\" class=\"fn\">normalize_interp</a>(&amp;self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, max_t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>A little shortcut that does the normalization for you.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.normalize_interp_between\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/interpolation.rs.html#25-28\">source</a><a href=\"#method.normalize_interp_between\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"math/interpolation/trait.Linear.html#method.normalize_interp_between\" class=\"fn\">normalize_interp_between</a>(v1: Self, v2: Self, t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, max_t: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Combines interp_between with normalize_interp()</div></details></div></details>","Linear","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3Cf64%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#347-356\">source</a><a href=\"#impl-Mul%3Cf64%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#350-355\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<f64>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#330-339\">source</a><a href=\"#impl-Mul-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#333-338\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, other: <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#340-345\">source</a><a href=\"#impl-MulAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#341-344\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#359-367\">source</a><a href=\"#impl-Neg-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#361-366\">source</a><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-PartialEq-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#262\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-PartialOrd-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.81.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1179\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1197\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1214\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.81.0/src/core/cmp.rs.html#1232\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.81.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#12-82\">source</a><a href=\"#impl-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><section id=\"associatedconstant.ZERO\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/math/point.rs.html#13\">source</a><h4 class=\"code-header\">pub const <a href=\"math/point/struct.Point.html#associatedconstant.ZERO\" class=\"constant\">ZERO</a>: Self = _</h4></section><section id=\"associatedconstant.ONE\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/math/point.rs.html#14\">source</a><h4 class=\"code-header\">pub const <a href=\"math/point/struct.Point.html#associatedconstant.ONE\" class=\"constant\">ONE</a>: Self = _</h4></section><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#15-17\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.new\" class=\"fn\">new</a>(x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>, y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section><section id=\"method.new_rotated\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#18-34\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.new_rotated\" class=\"fn\">new_rotated</a>(\n    origin: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>&gt;,\n    pt: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a>&gt;,\n    angle: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>,\n) -&gt; Self</h4></section><section id=\"method.from_angle\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#35-37\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.from_angle\" class=\"fn\">from_angle</a>(a: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section><section id=\"method.as_angle\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#39-41\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.as_angle\" class=\"fn\">as_angle</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.normalize\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#42-52\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.normalize\" class=\"fn\">normalize</a>(&amp;mut self)</h4></section><section id=\"method.dot\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#53-55\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.dot\" class=\"fn\">dot</a>(&amp;self, other: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a></h4></section><section id=\"method.round\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#69-71\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.round\" class=\"fn\">round</a>(&amp;mut self)</h4></section><section id=\"method.rounded\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#72-74\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.rounded\" class=\"fn\">rounded</a>(&amp;self) -&gt; Self</h4></section><section id=\"method.floor\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#76-78\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.floor\" class=\"fn\">floor</a>(&amp;mut self)</h4></section><section id=\"method.floored\" class=\"method\"><a class=\"src rightside\" href=\"src/math/point.rs.html#79-81\">source</a><h4 class=\"code-header\">pub fn <a href=\"math/point/struct.Point.html#tymethod.floored\" class=\"fn\">floored</a>(&amp;self) -&gt; Self</h4></section></div></details>",0,"math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3Cf64%3E-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#289-298\">source</a><a href=\"#impl-Sub%3Cf64%3E-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>&gt; for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#292-297\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.81.0/std/primitive.f64.html\">f64</a>) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<f64>","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#272-281\">source</a><a href=\"#impl-Sub-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#275-280\">source</a><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","math::Vec2"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#283-288\">source</a><a href=\"#impl-SubAssign-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#284-287\">source</a><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Self)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.81.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","math::Vec2"],["<section id=\"impl-Copy-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-Copy-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section>","Copy","math::Vec2"],["<section id=\"impl-StructuralPartialEq-for-Point\" class=\"impl\"><a class=\"src rightside\" href=\"src/math/point.rs.html#1\">source</a><a href=\"#impl-StructuralPartialEq-for-Point\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.81.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"math/point/struct.Point.html\" title=\"struct math::point::Point\">Point</a></h3></section>","StructuralPartialEq","math::Vec2"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()