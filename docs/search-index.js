var searchIndex = new Map(JSON.parse('[\
["enum_variant_name",{"t":"Y","n":["VariantName"],"q":[[0,"enum_variant_name"]],"i":[0],"f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["logger",{"t":"FNNNNNNHNNNHNNN","n":["LoggerConfig","add_filter","borrow","borrow_mut","default","fmt","from","init","into","new","set_level","test","try_from","try_into","type_id"],"q":[[0,"logger"],[15,"log"],[16,"core::fmt"],[17,"core::option"],[18,"core::result"],[19,"core::any"]],"i":[0,1,1,1,1,1,1,0,1,1,1,0,1,1,1],"f":"`{{b{f{d}}h}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{jc}}}{{f{je}}}{}{}}{{}b}{{{f{b}}{f{jl}}}n}{cc{}}{{b{A`{{f{d}}}}}Ab}{ce{}{}}4{{bh}b}{{}Ab}{c{{Ad{e}}}{}{}}0{{{f{c}}}Af{}}","D":"d","p":[[5,"LoggerConfig",0],[1,"str"],[1,"reference"],[6,"LevelFilter",15],[0,"mut"],[5,"Formatter",16],[8,"Result",16],[6,"Option",17],[1,"unit"],[6,"Result",18],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0AAwAAAAYACAAAAAoABQA="}],\
["math",{"t":"EEEEEIECCHCHCCCCCOOFGPPNNNNNNNNNNNNNNNNFNNNONNNNNNNNNNNONNNNNGPPPPNNNNNNNNNHHHHHHNNNNKMMNNFNNNNNNNNNNNNNNNHNNNNNNTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNHNOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Arc","Circle","Line","Point","Rect","Vec2","Vec2D","arc","circle","clamp","collision","get_distance","interpolation","line","point","rect","vec2d","x","y","Arc","BaseShape","Circle","Rect","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","new","points","try_from","try_from","try_into","try_into","type_id","type_id","Circle","borrow","borrow_mut","center","center","clone","clone_into","clone_to_uninit","clone_to_uninit","eq","fmt","fmt","from","from","into","new","radius","to_owned","to_string","try_from","try_into","type_id","CollideDirection","Down","Left","Right","Up","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","fmt","from","into","line_closest_pt","line_line","point_rect","rect_line","rect_rect","rect_rect_no_r","to_owned","try_from","try_into","type_id","Linear","interp","interp_between","normalize_interp","normalize_interp_between","Line","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","clone_to_uninit","eq","fmt","fmt","from","from","into","new","new_rotated","rotate","rotate","to_owned","to_string","try_from","try_into","type_id","ONE","Point","ZERO","add","add","add_assign","as_angle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","default","div","div","div_assign","dot","eq","floor","floored","fmt","fmt","from","from","from","from","from","from","from_angle","interp","interp_between","into","mul","mul","mul_assign","neg","new","new_rotated","normalize","normalize_p2","partial_cmp","round","rounded","sub","sub","sub_assign","to_owned","to_string","try_from","try_into","two_points_angle","type_id","x","y","Rect","aa_botleft","aa_botright","aa_lines","aa_points","aa_points5","aa_topleft","aa_topright","add","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","clone_to_uninit","eq","fmt","fmt","from","height","into","is_aa","new","new_from_center","r_botleft","r_botright","r_lines","r_points","r_points5","r_topleft","r_topright","rotation","set_center","set_height","set_rotation","set_size","set_width","size","sub","to_owned","to_string","try_from","try_into","type_id","width","IndexOutOfBoundsError","Vec2D","Vec2DIterator","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","contains_point","elems","eq","fmt","fmt","from","from","from","get","get_mut","index_from_point","into","into","into","into_iter","iter","new","new_empty","new_from_element","new_from_vec","next","rect_iter","rect_iter_clamped","set","set_rect_from_elem","size","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"math"],[19,"math::arc"],[39,"math::circle"],[61,"math::collision"],[85,"math::interpolation"],[90,"math::line"],[113,"math::point"],[168,"math::rect"],[214,"math::vec2d"],[258,"core::cmp"],[259,"alloc::vec"],[260,"core::result"],[261,"core::any"],[262,"core::fmt"],[263,"alloc::string"],[264,"core::convert"],[265,"core::option"],[266,"core::clone"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,29,29,0,0,6,6,6,7,6,7,6,7,6,7,7,7,6,7,6,7,6,7,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,0,0,0,18,18,18,18,0,21,21,21,21,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,19,19,19,19,19,19,2,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,2,2,2,2,2,2,2,2,2,2,0,2,2,2,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,0,0,34,30,31,34,30,31,30,30,31,30,31,34,30,31,30,30,30,34,30,31,31,30,31,30,30,30,31,30,30,30,30,30,34,30,31,34,30,31,34,30,31],"f":"`````````{{ccc}cb}`{{{f{d}}{f{d}}}h}```````````{{{f{c}}}{{f{e}}}{}{}}0{{{f{jc}}}{{f{je}}}{}{}}0{cc{}}0{ce{}{}}0{{lh}n}{{{f{n}}}{{A`{d}}}}{c{{Ab{e}}}{}{}}000{{{f{c}}}Ad{}}0`76{{{f{Af}}}d}`{{{f{Af}}}Af}{{{f{c}}{f{je}}}Ah{}{}}{{{f{c}}}Ah{}}0{{{f{Af}}{f{Af}}}Aj}{{{f{Af}}{f{jAl}}}An}0{{{B`{{B`{hh}}h}}}Af}<;{{dh}Af}`{{{f{c}}}e{}{}}{{{f{c}}}Bb{}};;:`````{{{f{c}}}{{f{e}}}{}{}}{{{f{jc}}}{{f{je}}}{}{}}{{{f{Bd}}}Bd}:99{{{f{Bd}}{f{jAl}}}An}{cc{}}{ce{}{}}{{{f{Bf}}{f{d}}}d}{{{f{Bf}}{f{Bf}}}Aj}{{{f{d}}{f{Bh}}}Aj}{{{f{Bh}}{f{Bf}}}Aj}{{{f{Bh}}{f{Bh}}}Aj}0<{c{{Ab{e}}}{}{}}0{{{f{c}}}Ad{}}`{{{f{Bj}}h}Bj}{{BjBjh}Bj}{{{f{Bj}}hh}Bj}{{BjBjhh}Bj}`{{{f{c}}}{{f{e}}}{}{}}{{{f{jc}}}{{f{je}}}{}{}}{{{f{Bf}}}d}{{{f{Bf}}}Bf}{{{f{c}}{f{je}}}Ah{}{}}{{{f{c}}}Ah{}}0?{{{f{Bf}}{f{jAl}}}An}0{cc{}}{{{B`{{B`{hh}}{B`{hh}}}}}Bf}{ce{}{}}{{dd}Bf}{{dhh}Bf}{{Bfh}Bf}{{{f{jBf}}h}Ah}{{{f{c}}}e{}{}}{{{f{c}}}Bb{}}{c{{Ab{e}}}{}{}}0{{{f{c}}}Ad{}}```{{dd}d}{{dh}d}{{{f{jd}}d}Ah}{{{f{d}}}h}{{{f{c}}}{{f{e}}}{}{}}{{{f{jc}}}{{f{je}}}{}{}}{{{f{d}}}d}{{{f{c}}{f{je}}}Ah{}{}}{{{f{c}}}Ah{}}0{{}d}987{{{f{d}}d}h}{{{f{d}}{f{d}}}Aj}{{{f{jd}}}Ah}6{{{f{d}}{f{jAl}}}An}0{cc{}}{{{B`{BlBl}}}d}{{{B`{BnBn}}}d}{hd}{{{B`{hh}}}d}{{{B`{C`C`}}}d}2{{{f{d}}h}d}{{ddh}d}{ce{}{}}{{dh}d}{{dd}d}{{{f{jd}}d}Ah}{dd}{{hh}d}{{ceh}d{{Cb{d}}}{{Cb{d}}}}{{{f{jd}}}Ah}3{{{f{d}}{f{d}}}{{Cf{Cd}}}}1{{{f{d}}}d}876{{{f{c}}}e{}{}}{{{f{c}}}Bb{}}{c{{Ab{e}}}{}{}}0{{dd}h}{{{f{c}}}Ad{}}```{{{f{Bh}}}d}0{{{f{Bh}}}{{Ch{Bf}}}}{{{f{Bh}}}{{Ch{d}}}}022{{Bhd}Bh}{{{f{c}}}{{f{e}}}{}{}}{{{f{jc}}}{{f{je}}}{}{}}5{{{f{Bh}}}Bh}{{{f{c}}{f{je}}}Ah{}{}}{{{f{c}}}Ah{}}0{{{f{Bh}}{f{Bh}}}Aj}{{{f{Bh}}{f{jAl}}}An}0{cc{}}{{{f{Bh}}}h}{ce{}{}}{{{f{Bh}}}Aj}{{ceg}Bh{{Cb{d}}}{{Cb{Cj}}}{{Cb{h}}}}{{ceg}Bh{{Cb{d}}}{{Cb{d}}}{{Cb{h}}}}{{{f{Bh}}}d}0{{{f{Bh}}}{{Ch{Bf}}}}{{{f{Bh}}}{{Ch{d}}}}0227{{{f{jBh}}c}Ah{{Cb{d}}}}{{{f{jBh}}c}Ah{{Cb{h}}}}0{{{f{jBh}}c}Ah{{Cb{Cj}}}}1{{{f{Bh}}}Cj}{{Bhd}Bh}{{{f{c}}}e{}{}}{{{f{c}}}Bb{}}{c{{Ab{e}}}{}{}}0{{{f{c}}}Ad{}}{{{f{Bh}}}h}```{{{f{c}}}{{f{e}}}{}{}}00{{{f{jc}}}{{f{je}}}{}{}}00{{{f{{Cl{c}}}}e}Aj{}{{Cb{d}}}}{{{f{{Cl{c}}}}}{{f{{A`{c}}}}}{}}{{{f{Cn}}{f{Cn}}}Aj}{{{f{{Cl{c}}}}{f{jAl}}}AnD`}{{{f{Cn}}{f{jAl}}}An}{cc{}}00{{{f{{Cl{c}}}}e}{{Cf{{f{c}}}}}{}{{Cb{d}}}}{{{f{j{Cl{c}}}}e}{{Cf{{f{jc}}}}}{}{{Cb{d}}}}{{{f{{Cl{c}}}}e}C`{}{{Cb{d}}}}{ce{}{}}000{{{f{{Cl{c}}}}}Cn{}}{BhCn}{{}{{Cl{c}}}{}}{{ce}{{Cl{c}}}{DbD`}{{Cb{Cj}}}}{{{A`{c}}e}{{Cf{{Cl{c}}}}}{}{{Cb{Cj}}}}{{{f{jCn}}}{{Cf{c}}}{}}{{{f{{Cl{c}}}}Bh}Cn{}}0{{{f{j{Cl{c}}}}ec}{{Ab{cDd}}}{}{{Cb{d}}}}{{{f{j{Cl{c}}}}BhcAj}{{Ab{AhBb}}}{DbD`}}{{{f{{Cl{c}}}}}d{}}{c{{Ab{e}}}{}{}}00000{{{f{c}}}Ad{}}00","D":"C`","p":[[10,"PartialOrd",258],[5,"Point",113],[1,"reference"],[1,"f64"],[0,"mut"],[6,"BaseShape",19],[5,"Arc",19],[5,"Vec",259],[6,"Result",260],[5,"TypeId",261],[5,"Circle",39],[1,"unit"],[1,"bool"],[5,"Formatter",262],[8,"Result",262],[1,"tuple"],[5,"String",263],[6,"CollideDirection",61],[5,"Line",90],[5,"Rect",168],[10,"Linear",85],[1,"u32"],[1,"f32"],[1,"u64"],[10,"Into",264],[6,"Ordering",258],[6,"Option",265],[1,"array"],[8,"Vec2",0],[5,"Vec2D",214],[5,"Vec2DIterator",214],[10,"Debug",262],[10,"Clone",266],[5,"IndexOutOfBoundsError",214]],"r":[[0,19],[1,39],[2,90],[3,113],[4,168],[6,214]],"b":[[49,"impl-Debug-for-Circle"],[50,"impl-Display-for-Circle"],[99,"impl-Display-for-Line"],[100,"impl-Debug-for-Line"],[116,"impl-Add-for-Point"],[117,"impl-Add%3Cf64%3E-for-Point"],[127,"impl-Div-for-Point"],[128,"impl-Div%3Cf64%3E-for-Point"],[134,"impl-Debug-for-Point"],[135,"impl-Display-for-Point"],[137,"impl-From%3C(u32,+u32)%3E-for-Point"],[138,"impl-From%3C(f32,+f32)%3E-for-Point"],[139,"impl-From%3Cf64%3E-for-Point"],[140,"impl-From%3C(f64,+f64)%3E-for-Point"],[141,"impl-From%3C(u64,+u64)%3E-for-Point"],[146,"impl-Mul%3Cf64%3E-for-Point"],[147,"impl-Mul-for-Point"],[157,"impl-Sub%3Cf64%3E-for-Point"],[158,"impl-Sub-for-Point"],[185,"impl-Display-for-Rect"],[186,"impl-Debug-for-Rect"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOoADgAAABsAIAAUADcAEgBMAAoAWAAAAFsACgBnAAAAaQAfAIoABwCTACgAvQAAAMAAJADoAAIA7gAUAA=="}],\
["mem",{"t":"H","n":["display_bytes"],"q":[[0,"mem"],[1,"alloc::string"]],"i":[0],"f":"{bd}","D":"`","p":[[1,"u64"],[5,"String",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],\
["networking",{"t":"EEEEECCCCCGPPNNNNNNNNNNNNNNNNNKNNNNNNPPPPPPPFFFGGPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNONNNNNNNNNNNNNNNNNNNNPPSFPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNFENNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONNNNNNNNNNNN","n":["Message","NetworkError","NetworkStats","Proxy","Socket","error","message","proxy","socket","stats","NetworkError","Proxy","Socket","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","init","into","source","to_string","try_from","try_into","type_id","Message","default_exit","default_ping","default_pong","is_exit","is_ping","is_pong","ChannelRecv","ChannelSend","Config","ConnectionResetError","Disconnected","Exit","Forward","Proxy","ProxyConfig","ProxyController","ProxyError","ProxyMessage","SocketRecv","SocketSend","addr","auto_reconnect","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from","from","init","init","init","init","init","into","into","into","into","into","is_connected","is_running","keep_msg_while_disconnected","recv","request_ping","run_tps","send","start_new","stat_cfg","stats","thread_handle","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","type_id","type_id","Deserialization","Exited","HEADER_SIZE","Header","Serialization","Socket","SocketError","StreamRead","StreamWrite","TestError","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","clone_to_uninit","clone_to_uninit","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","local_addr","new","new","recv","remote_addr","send","serialize","shutdown","size","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_recv","type_id","type_id","type_id","NetworkStats","StatConfig","borrow","borrow_mut","bps_received_last_10_sec","bps_sent_last_10_sec","clone","clone_into","clone_to_uninit","config","default","deref","deref_mut","drop","from","get_rtt","init","into","new","on_bytes_recv","on_bytes_send","on_msg_recv","on_msg_send","received_last_10_sec","sent_last_10_sec","set_rtt","to_owned","total_received","total_sent","try_from","try_into","type_id","update","BpsConfig","RttConfig","StatConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bps","clone","clone","clone","clone_into","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","enabled","enabled","fmt","fmt","fmt","from","from","from","init","init","init","into","into","into","ping_request_delay","rtt","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id"],"q":[[0,"networking"],[10,"networking::error"],[30,"networking::message"],[37,"networking::proxy"],[132,"networking::socket"],[196,"networking::stats"],[229,"networking::stats::config"],[291,"core::fmt"],[292,"networking::proxy::error"],[293,"core::error"],[294,"core::option"],[295,"alloc::string"],[296,"core::result"],[297,"core::any"],[298,"networking::proxy::config"],[299,"networking::proxy::message"],[300,"core::cmp"],[301,"networking::proxy::controller"],[302,"std::sync::mpsc"],[303,"std::net::tcp"],[304,"std::thread"],[305,"serde::de"],[306,"core::net::socket_addr"],[307,"core::time"],[308,"serde::ser"],[309,"core::clone"],[310,"threading::channel"]],"i":[0,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,0,15,15,15,15,15,15,8,8,8,18,8,18,18,0,0,0,0,0,8,8,17,17,21,41,17,8,18,21,41,17,8,18,17,17,17,17,21,41,17,8,18,21,41,17,8,18,21,41,17,8,18,8,18,17,8,8,18,21,41,17,8,18,21,41,17,8,18,21,41,17,8,18,21,21,17,21,21,17,21,41,17,21,21,17,8,21,41,17,8,18,21,41,17,8,18,21,21,41,17,8,18,9,9,0,0,9,0,0,9,9,9,30,28,9,30,28,9,28,28,28,28,30,28,9,30,28,9,28,30,30,28,9,28,9,9,30,28,9,30,28,9,30,28,9,30,30,28,30,30,30,28,30,28,28,9,30,28,9,30,28,9,30,30,28,9,0,0,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,39,40,37,39,40,37,37,39,40,37,39,40,37,39,39,40,40,37,37,39,40,37,39,40,37,39,40,37,39,40,37,39,40,39,40,37,39,40,37,39,40,37,39,40,37,40,37,39,40,37,39,40,37,39,40,37,39,40,37],"f":"`````````````{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{j}}{b{dl}}}n}0{A`j}{Abj}{cc{}}{{}f}{ce{}{}}{{{b{j}}}{{Af{{b{Ad}}}}}}{{{b{c}}}Ah{}}{c{{Aj{e}}}{}{}}0{{{b{c}}}Al{}}`{{}An}00{{{b{An}}}B`}00````````````````{{{b{c}}}{{b{e}}}{}{}}0000{{{b{dc}}}{{b{de}}}{}{}}0000{{{b{Bb}}}Bb}{{{b{c}}{b{de}}}h{}{}}{{{b{c}}}h{}}0{f{{b{c}}}{}}0000{f{{b{dc}}}{}}0000{fh}0000{{{b{A`}}{b{A`}}}B`}{{{b{{Bd{c}}}}{b{{Bd{c}}}}}B`{BfAn}}{{{b{Bb}}{b{dl}}}n}{{{b{A`}}{b{dl}}}n}0{{{b{{Bd{c}}}}{b{dl}}}n{BhAn}}{cc{}}0000{{}f}0000{ce{}{}}0000{{{b{{Bj{ce}}}}}B`AnAn}0`{{{b{{Bj{ce}}}}}{{Aj{{Bd{c}}Bl}}}AnAn}{{{b{{Bj{ce}}}}}{{Aj{h{Bn{e}}}}}AnAn}`{{{b{{Bj{ce}}}}e}{{Aj{h{Bn{e}}}}}AnAn}{{Bb{Af{C`}}}{{Bj{ce}}}AnAn}`{{{b{d{Bj{ce}}}}}{{b{{Cb{ce}}}}}AnAn}{{{b{{Bj{ce}}}}}{{b{{Cd{h}}}}}AnAn}{{{b{c}}}e{}{}}{{{b{c}}}Ah{}}{c{{Aj{e}}}{}{}}000000000{{{b{{Bj{ce}}}}}{{Aj{{Bd{c}}Cf}}}AnAn}{{{b{c}}}Al{}}0000``````````{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{Ch}}}Ch}{{{b{c}}{b{de}}}h{}{}}{{{b{c}}}h{}}0{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{c{{Aj{Ch}}}Cj}{fh}{{{b{d{Cl{ce}}}}}hAnAn}11{{{b{Ch}}{b{dl}}}n}{{{b{Ab}}{b{dl}}}n}0{cc{}}00{{}f}00{ce{}{}}00{{{b{{Cl{ce}}}}}CnAnAn}{C`{{Cl{ce}}}AnAn}{D`Ch}{{{b{d{Cl{ce}}}}Db}{{Aj{{Dd{Chc}}Ab}}}AnAn}3{{{b{d{Cl{ce}}}}e}{{Aj{ChAb}}}AnAn}{{{b{Ch}}c}AjDf}{{{b{{Cl{ce}}}}}hAnAn}`{{{b{c}}}e{}{}}{{{b{c}}}Ah{}}{c{{Aj{e}}}{}{}}00000{{{b{d{Cl{ce}}}}}{{Aj{{Dd{Chc}}Ab}}}AnAn}{{{b{c}}}Al{}}00``{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{{{b{{Cb{ce}}}}}D`AnAn}0{{{b{{Cb{ce}}}}}{{Cb{ce}}}{DhAn}{DhAn}}{{{b{c}}{b{de}}}h{}{}}{{{b{c}}}h{}}`{{}{{Cb{ce}}}AnAn}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{{{b{{Cb{ce}}}}}DbAnAn}{{}f}{ce{}{}}{Dj{{Cb{ce}}}AnAn}{{{b{d{Cb{ce}}}}{b{Ch}}}hAnAn}0{{{b{d{Cb{ce}}}}{b{c}}{b{d{Cl{ce}}}}}hAnAn}{{{b{d{Cb{ce}}}}{b{e}}}hAnAn}??{{{b{d{Cb{ce}}}}Db}hAnAn}{{{b{c}}}e{}{}}{{{b{{Cb{ce}}}}}D`AnAn}0{c{{Aj{e}}}{}{}}0{{{b{c}}}Al{}}{{{b{d{Cb{ce}}}}{b{d{Dl{e{Bd{c}}}}}}{b{d{Cl{ce}}}}}{{Aj{hA`}}}AnAn}```{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00`{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Dj}}}Dj}{{{b{c}}{b{de}}}h{}{}}00{{{b{c}}}h{}}00000{{}Dn}{{}E`}{{}Dj}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{fh}00``{{{b{Dn}}{b{dl}}}n}{{{b{E`}}{b{dl}}}n}{{{b{Dj}}{b{dl}}}n}{cc{}}00{{}f}00{ce{}{}}00``{{{b{c}}}e{}{}}00{c{{Aj{e}}}{}{}}00000{{{b{c}}}Al{}}00","D":"Cf","p":[[1,"reference"],[0,"mut"],[1,"usize"],[1,"unit"],[6,"NetworkError",10],[5,"Formatter",291],[8,"Result",291],[6,"ProxyError",37,292],[6,"SocketError",132],[10,"Error",293],[6,"Option",294],[5,"String",295],[6,"Result",296],[5,"TypeId",297],[10,"Message",30],[1,"bool"],[5,"ProxyConfig",37,298],[6,"ProxyMessage",37,299],[10,"PartialEq",300],[10,"Debug",291],[5,"ProxyController",37,301],[5,"RecvError",302],[5,"SendError",302],[5,"TcpStream",303],[5,"NetworkStats",196],[5,"JoinHandle",304],[6,"TryRecvError",302],[5,"Header",132],[10,"Deserializer",305],[5,"Socket",132],[6,"SocketAddr",306],[1,"u64"],[5,"Duration",307],[1,"tuple"],[10,"Serializer",308],[10,"Clone",309],[5,"StatConfig",229],[5,"Channel",310],[5,"BpsConfig",229],[5,"RttConfig",229],[5,"Proxy",37]],"r":[[0,30],[1,10],[2,196],[3,37],[4,132],[45,298],[46,301],[47,292],[48,299],[197,229]],"b":[[18,"impl-Debug-for-NetworkError"],[19,"impl-Display-for-NetworkError"],[20,"impl-From%3CProxyError%3E-for-NetworkError"],[21,"impl-From%3CSocketError%3E-for-NetworkError"],[85,"impl-Display-for-ProxyError"],[86,"impl-Debug-for-ProxyError"],[164,"impl-Debug-for-SocketError"],[165,"impl-Display-for-SocketError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAgBDAAAABYAGAAAABoACAAkADQAXgAEAGgAPgCqAAIAsAAiANQAAQDXADUAEAECABYBDQA="}],\
["random",{"t":"HHHHHHH","n":["conflip","get","get_inc","pick","seed","set_seed","str"],"q":[[0,"random"],[7,"rand::distributions::uniform"],[8,"core::cmp"],[9,"core::fmt"],[10,"alloc::string"]],"i":[0,0,0,0,0,0,0],"f":"{{}b}{{cc}c{dfhj}}{{cc}c{dfjh}}{{{n{{l{c}}}}}{{n{c}}}j}{{}A`}{A`Ab}{AdAf}","D":"n","p":[[1,"bool"],[10,"SampleUniform",7],[10,"PartialEq",8],[10,"PartialOrd",8],[10,"Debug",9],[1,"slice"],[1,"reference"],[1,"u64"],[1,"unit"],[1,"usize"],[5,"String",10]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],\
["threading",{"t":"FENNNNNNNNNNCNNNNNNNNNNIPPFGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Channel","ThreadPool","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","iter","new_pair","pool","recv","recv_timeout","send","try_from","try_into","try_iter","try_recv","type_id","wait_for","wait_for_or_timeout","ArcFuture","Done","Flying","Future","FutureState","Panicked","Started","ThreadPool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","flying_tasks_count","fmt","from","from","from","init","init","init","into","into","into","is_done","new","output","run","state","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","wait"],"q":[[0,"threading"],[23,"threading::pool"],[83,"threading::channel"],[84,"std::sync::mpsc"],[85,"core::cmp"],[86,"core::result"],[87,"core::time"],[88,"core::any"],[89,"threading::pool::future"],[90,"core::fmt"],[91,"core::marker"],[92,"core::ops::function"],[93,"core::panic::unwind_safe"]],"i":[0,0,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,0,17,17,0,0,17,17,0,19,17,18,19,17,18,17,18,17,18,17,17,18,19,19,17,18,19,17,18,19,17,18,17,18,17,19,17,18,19,17,18,19,17,18,19,18,19,18,19,17,18,19,17,18,19,17,18,19,17,18,19],"f":"``{{{b{c}}}{{b{e}}}{}{}}{{{b{dc}}}{{b{de}}}{}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{{}f}{ce{}{}}{{{b{{j{ce}}}}}{{l{c}}}nn}{{}{{A`{{j{ce}}{j{ec}}}}}{}{}}`{{{b{{j{ce}}}}}{{Ad{cAb}}}nn}{{{b{{j{ce}}}}Af}{{Ad{cAh}}}nn}{{{b{{j{ce}}}}e}{{Ad{h{Aj{e}}}}}nn}{c{{Ad{e}}}{}{}}0{{{b{{j{ce}}}}}{{Al{c}}}nn}{{{b{{j{ce}}}}}{{Ad{cAn}}}nn}{{{b{c}}}B`{}}{{{b{{j{ce}}}}c}{{Ad{hAb}}}nn}{{{b{{j{ce}}}}cAf}{{Ad{hAh}}}nn}````````{{{b{c}}}{{b{e}}}{}{}}00{{{b{dc}}}{{b{de}}}{}{}}00{{{b{Bb}}}Bb}{{{b{Bd}}}Bd}{{{b{c}}{b{de}}}h{}{}}0{{{b{c}}}h{}}00{{}{{Bf{c}}}{}}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{fh}00{{{b{Bb}}{b{Bb}}}Bh}{{{b{Bd}}}Bj}{{{b{Bb}}{b{dBl}}}Bn}{cc{}}00{{}f}00{ce{}{}}00{{{b{{Bf{c}}}}}Bh{}}{BjBd}{{{b{{Bf{c}}}}}c{}}{{{b{Bd}}e}{{C`{c}}}Cb{{Cf{}{{Cd{c}}}}CbCh}}{{{b{{Bf{c}}}}}Bb{}}{{{b{c}}}e{}{}}0{c{{Ad{e}}}{}{}}00000{{{b{c}}}B`{}}00{{{b{{Bf{c}}}}}h{}}","D":"Cn","p":[[1,"reference"],[0,"mut"],[1,"usize"],[1,"unit"],[5,"Channel",0,83],[5,"Iter",84],[10,"PartialEq",85],[1,"tuple"],[5,"RecvError",84],[6,"Result",86],[5,"Duration",87],[6,"RecvTimeoutError",84],[5,"SendError",84],[5,"TryIter",84],[6,"TryRecvError",84],[5,"TypeId",88],[6,"FutureState",23,89],[5,"ThreadPool",23],[5,"Future",23,89],[1,"bool"],[1,"u16"],[5,"Formatter",90],[8,"Result",90],[8,"ArcFuture",23],[10,"Send",91],[17,"Output"],[10,"FnOnce",92],[10,"UnwindSafe",93]],"r":[[0,83],[1,23],[26,89],[27,89]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADQACgAAAAcACQAAAA0AAAARAAEAFQAAABgAAAAgABcAOQAAAD0AAgBIAAoA"}],\
["time",{"t":"FPPGNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHNNNNNNNNNNOOO","n":["DTDelay","Paused","Running","Stopwatch","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","clone_to_uninit","clone_to_uninit","clone_to_uninit","default","default","ended","eq","fmt","fmt","fmt","format","fraction","from","from","from","into","into","is_running","new","new","read","restart","restart_custom_timeline","start","start_new","stop","time_since_ended","timeit","timeit_async","timeit_mut","to_owned","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","update","paused_since","runtime","start_time"],"q":[[0,"time"],[52,"time::Stopwatch"],[55,"core::fmt"],[56,"core::time"],[57,"alloc::string"],[58,"core::ops::function"],[59,"core::future::future"],[60,"core::result"],[61,"core::any"]],"i":[0,4,4,0,3,4,3,4,3,4,3,4,3,3,4,3,4,3,3,3,4,4,0,3,3,3,4,3,4,4,3,4,4,3,3,4,4,4,3,0,0,0,3,4,4,3,4,3,4,3,4,3,20,20,21],"f":"````{{{b{c}}}{{b{e}}}{}{}}0{{{b{dc}}}{{b{de}}}{}{}}0{{{b{f}}}f}{{{b{h}}}h}{{{b{c}}{b{de}}}j{}{}}0{{{b{c}}}j{}}00{{}f}{{}h}{{{b{f}}}l}{{{b{f}}{b{f}}}l}{{{b{f}}{b{dn}}}A`}{{{b{h}}{b{dn}}}A`}0{{AbAd}Af}{{{b{f}}}Ah}{cc{}}{Ahf}1{ce{}{}}0{{{b{h}}}l}2:{{{b{h}}}Ab}{{{b{df}}}j}{{{b{df}}Ah}j}{{{b{dh}}}j}>08{e{{Aj{cAb}}}{}{{An{}{{Al{c}}}}}}{g{{Aj{cAb}}}{}{{B`{}{{Al{c}}}}}{{An{}{{Al{e}}}}}}{e{{Aj{cAb}}}{}{{Bb{}{{Al{c}}}}}}{{{b{c}}}e{}{}}0{{{b{c}}}Af{}}{c{{Bd{e}}}{}{}}000{{{b{c}}}Bf{}}08```","D":"Bd","p":[[1,"reference"],[0,"mut"],[5,"DTDelay",0],[6,"Stopwatch",0],[1,"unit"],[1,"bool"],[5,"Formatter",55],[8,"Result",55],[5,"Duration",56],[1,"i8"],[5,"String",57],[1,"f64"],[1,"tuple"],[17,"Output"],[10,"FnOnce",58],[10,"Future",59],[10,"FnMut",58],[6,"Result",60],[5,"TypeId",61],[15,"Paused",52],[15,"Running",52]],"r":[],"b":[[20,"impl-Display-for-Stopwatch"],[21,"impl-Debug-for-Stopwatch"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACUACQAAAAAAAgABAAUADAATAAMAHgAAACAAAQAkAAIAKwAIADUAAgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
