var searchIndex = new Map(JSON.parse('[["enum_variant_name",{"t":"Y","n":["VariantName"],"q":[[0,"enum_variant_name"]],"i":"`","f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[]}],["logger",{"t":"FGPPPPGPGKPPPPNNNNNNNNNONNNNNONNNNNNNNNNNNHNNNNNONNONNNNNNNNNNNNNNNNOO","n":["Config","ConfigError","CustomStream","DirectoryDoesNotExist","File","InvalidOutput","InvalidOutputError","NotAFile","Output","OutputStream","ReadOnlyDirectory","StdErr","Stdout","TimedFile","borrow","","","","borrow_mut","","","","colored","","default","eq","","filter","filters","","fmt","","","","from","","","","","","","","init","into","","","","level","","new_timed_file","output","","source","to_string","","try_from","","","","try_into","","","","try_output","type_id","","","","interval","path"],"q":[[0,"logger"],[68,"logger::Output"],[70,"logger::config"],[71,"log"],[72,"hashbrown::map"],[73,"core::fmt"],[74,"std::path"],[75,"alloc::boxed"],[76,"alloc::vec"],[77,"core::convert"],[78,"core::time"],[79,"core::error"],[80,"core::option"],[81,"alloc::string"],[82,"core::result"],[83,"core::any"],[84,"chrono"]],"i":"``Anl1j`1``12222f12301200012000112233330112`3012003001123012301203012Cf0","f":"``````````````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{fh}f}{fh}{{}f}{{{b{j}}{b{j}}}h}{{{b{l}}{b{l}}}h}{{f{b{n}}A`}f}{{f{b{{Ad{{Ab{{b{n}}A`}}}}}}}f}{fAf}{{{b{j}}{b{dAh}}}Aj}0{{{b{l}}{b{dAh}}}Aj}0{AlAn}{{{b{n}}}An}{cc{}}{{{B`{c}}}AnBb}11{lj}2{cBd{{Bh{{Bf{f}}}}}}{{}c{}}000{{fA`}f}{fA`}{{ce}An{{Bh{Al}}}{{Bh{Bj}}}}{{fc}f{{Bh{An}}}}{fAn}{{{b{j}}}{{Bn{{b{Bl}}}}}}{bC`}0{c{{Cb{e}}}{}{}}000{{}{{Cb{c}}}{}}000{{fc}{{Cb{fj}}}{{Bh{An}}}}{bCd}000{CfCh}{CfAl}","D":"A`","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Config",0,70],[1,"bool"],[6,"ConfigError",0,70],[6,"InvalidOutputError",0,70],[1,"str"],[6,"LevelFilter",71],[1,"tuple",null,null,1],[1,"slice"],[5,"HashMap",72],[5,"Formatter",73],[8,"Result",73],[5,"PathBuf",74],[6,"Output",0,70],[5,"Box",75,null,1],[10,"OutputStream",0,70],[1,"unit"],[5,"Vec",76],[10,"Into",77,null,1],[5,"Duration",78],[10,"Error",79],[6,"Option",80,null,1],[5,"String",81],[6,"Result",82,null,1],[5,"TypeId",83],[15,"TimedFile",68],[8,"Duration",84]],"r":[[0,70],[1,70],[2,70],[3,70],[4,70],[5,70],[6,70],[7,70],[8,70],[9,70],[10,70],[11,70],[12,70],[13,70],[14,70],[15,70],[16,70],[17,70],[18,70],[19,70],[20,70],[21,70],[22,70],[23,70],[24,70],[25,70],[26,70],[27,70],[28,70],[29,70],[30,70],[31,70],[32,70],[33,70],[34,70],[35,70],[36,70],[37,70],[38,70],[39,70],[40,70],[41,70],[43,70],[44,70],[45,70],[46,70],[47,70],[48,70],[49,70],[50,70],[51,70],[52,70],[53,70],[54,70],[55,70],[56,70],[57,70],[58,70],[59,70],[60,70],[61,70],[62,70],[63,70],[64,70],[65,70],[66,70],[67,70]],"b":[[30,"impl-Display-for-ConfigError"],[31,"impl-Debug-for-ConfigError"],[32,"impl-Debug-for-InvalidOutputError"],[33,"impl-Display-for-InvalidOutputError"],[34,"impl-From%3CPathBuf%3E-for-Output"],[35,"impl-From%3C%26str%3E-for-Output"],[37,"impl-From%3CBox%3CT%3E%3E-for-Output"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAD4ABQAAACQAJgAAACkAAAArAAAAMAAWAA==","P":[[14,"T"],[22,""],[36,"T"],[40,""],[41,"T"],[42,""],[43,"U"],[47,""],[55,"U,T"],[59,"U"],[63,""]]}],["math",{"t":"EEEEEIECCHCHCCCCCOOFGPPNNNNNNNNNNNNNNNNFNNNONNNNNNNNNNONNNNNGPPPPNNNNNNNNHHHHHHNNNNKMMNNFNNNNNNNNNNNNNNHNNNNNNTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNHNOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Arc","Circle","Line","Point","Rect","Vec2","Vec2D","arc","circle","clamp","collision","get_distance","interpolation","line","point","rect","vec2d","x","y","Arc","BaseShape","Circle","Rect","borrow","","borrow_mut","","from","","into","","new","points","try_from","","try_into","","type_id","","Circle","borrow","borrow_mut","center","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","new","radius","to_owned","to_string","try_from","try_into","type_id","CollideDirection","Down","Left","Right","Up","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","line_closest_pt","line_line","point_rect","rect_line","rect_rect","rect_rect_no_r","to_owned","try_from","try_into","type_id","Linear","interp","interp_between","normalize_interp","normalize_interp_between","Line","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","new","new_rotated","rotate","","to_owned","to_string","try_from","try_into","type_id","ONE","Point","ZERO","add","","add_assign","as_angle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","div","","div_assign","dot","eq","floor","floored","fmt","","from","","","","","","from_angle","interp","interp_between","into","mul","","mul_assign","neg","new","new_rotated","normalize","normalize_p2","partial_cmp","round","rounded","sub","","sub_assign","to_owned","to_string","try_from","try_into","two_points_angle","type_id","x","y","Rect","aa_botleft","aa_botright","aa_lines","aa_points","aa_points5","aa_topleft","aa_topright","add","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","eq","fmt","","from","height","into","is_aa","new","new_from_center","r_botleft","r_botright","r_lines","r_points","r_points5","r_topleft","r_topright","rotation","set_center","set_height","set_rotation","set_size","set_width","size","sub","to_owned","to_string","try_from","try_into","type_id","width","IndexOutOfBoundsError","Vec2D","Vec2DIterator","borrow","","","borrow_mut","","","contains_point","elems","eq","fmt","","from","","","get","get_mut","index_from_point","into","","","into_iter","iter","new","new_empty","new_from_element","new_from_vec","next","rect_iter","rect_iter_clamped","set","set_rect_from_elem","size","try_from","","","try_into","","","type_id","",""],"q":[[0,"math"],[19,"math::arc"],[39,"math::circle"],[60,"math::collision"],[83,"math::interpolation"],[88,"math::line"],[110,"math::point"],[164,"math::rect"],[209,"math::vec2d"],[253,"core::cmp"],[254,"alloc::vec"],[255,"core::result"],[256,"core::any"],[257,"core::fmt"],[258,"alloc::string"],[259,"core::convert"],[260,"core::option"],[261,"core::clone"]],"i":"`````````````````j0``n00A`10101000101010`Ah0000000000000000000`Bh00000000000``````0000`Bn000`Bj0000000000000`000000d`0000000000000000000000000000000000000`0000000000`000`Bl0000000000000000000000000000000000000000000```DhCnDb21011010210111210010111011111210210210","f":"`````````{{ccc}cb}`{{{f{d}}{f{d}}}h}`````{jh}0````{f{{f{c}}}{}}0{{{f{l}}}{{f{lc}}}{}}0{cc{}}0{{}c{}}0{{nh}A`}{{{f{A`}}}{{Ab{d}}}}{c{{Ad{e}}}{}{}}0{{}{{Ad{c}}}{}}0{fAf}0`87{{{f{Ah}}}d}{Ahd}{{{f{Ah}}}Ah}{{f{f{lc}}}Aj{}}{{fAl}Aj}{{{f{Ah}}{f{Ah}}}An}{{{f{Ah}}{f{lB`}}}Bb}0={{{Bd{{Bd{hh}}h}}}Ah}={{dh}Ah}{Ahh}{fc{}}{fBf}>=<`````{f{{f{c}}}{}}{{{f{l}}}{{f{lc}}}{}}{{{f{Bh}}}Bh};:{{{f{Bh}}{f{lB`}}}Bb}{cc{}}{{}c{}}{{{f{Bj}}{f{d}}}d}{{{f{Bj}}{f{Bj}}}An}{{{f{d}}{f{Bl}}}An}{{{f{Bl}}{f{Bj}}}An}{{{f{Bl}}{f{Bl}}}An}0<{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}`{{{f{Bn}}h}Bn}{{BnBnh}Bn}{{{f{Bn}}hh}Bn}{{BnBnhh}Bn}`{f{{f{c}}}{}}{{{f{l}}}{{f{lc}}}{}}{{{f{Bj}}}d}{{{f{Bj}}}Bj}{{f{f{lc}}}Aj{}}{{fAl}Aj}{{{f{Bj}}{f{Bj}}}An}{{{f{Bj}}{f{lB`}}}Bb}0{{{Bd{{Bd{hh}}{Bd{hh}}}}}Bj}{cc{}}{{}c{}}{{dd}Bj}{{dhh}Bj}{{Bjh}Bj}{{{f{lBj}}h}Aj}{fc{}}{fBf}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}```{{dd}d}{{dh}d}{{{f{ld}}d}Aj}{{{f{d}}}h}{f{{f{c}}}{}}{{{f{l}}}{{f{lc}}}{}}{{{f{d}}}d}{{f{f{lc}}}Aj{}}{{fAl}Aj}{{}d}897{{{f{d}}d}h}{{{f{d}}{f{d}}}An}{{{f{ld}}}Aj}6{{{f{d}}{f{lB`}}}Bb}0{hd}{{{Bd{C`C`}}}d}{{{Bd{CbCb}}}d}{{{Bd{hh}}}d}{cc{}}{{{Bd{CdCd}}}d}5{{{f{d}}h}d}{{ddh}d}{{}c{}}{{dh}d}{{dd}d}{{{f{ld}}d}Aj}{dd}{{hh}d}{{ceh}d{{Cf{d}}}{{Cf{d}}}}{{{f{ld}}}Aj}3{{{f{d}}{f{d}}}{{Cj{Ch}}}}1{{{f{d}}}d}786{fc{}}{fBf}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{{dd}h}{fAf}{dh}0`{{{f{Bl}}}d}0{{{f{Bl}}}{{Cl{Bj}}}}{{{f{Bl}}}{{Cl{d}}}}022{{Bld}Bl}{f{{f{c}}}{}}{{{f{l}}}{{f{lc}}}{}}5{{{f{Bl}}}Bl}{{f{f{lc}}}Aj{}}{{fAl}Aj}{{{f{Bl}}{f{Bl}}}An}{{{f{Bl}}{f{lB`}}}Bb}0{cc{}}{{{f{Bl}}}h}{{}c{}}{{{f{Bl}}}An}{{ceg}Bl{{Cf{d}}}{{Cf{j}}}{{Cf{h}}}}{{ceg}Bl{{Cf{d}}}{{Cf{d}}}{{Cf{h}}}}{{{f{Bl}}}d}0{{{f{Bl}}}{{Cl{Bj}}}}{{{f{Bl}}}{{Cl{d}}}}0227{{{f{lBl}}c}Aj{{Cf{d}}}}{{{f{lBl}}c}Aj{{Cf{h}}}}0{{{f{lBl}}c}Aj{{Cf{j}}}}1{{{f{Bl}}}j}{{Bld}Bl}{fc{}}{fBf}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}{{{f{Bl}}}h}```{f{{f{c}}}{}}00{{{f{l}}}{{f{lc}}}{}}00{{{f{{Cn{c}}}}e}An{}{{Cf{d}}}}{{{f{{Cn{c}}}}}{{f{{D`{c}}}}}{}}{{{f{Db}}{f{Db}}}An}{{{f{{Cn{c}}}}{f{lB`}}}BbDd}{{{f{Db}}{f{lB`}}}Bb}{cc{}}00{{{f{{Cn{c}}}}e}{{Cj{{f{c}}}}}{}{{Cf{d}}}}{{{f{l{Cn{c}}}}e}{{Cj{{f{lc}}}}}{}{{Cf{d}}}}{{{f{{Cn{c}}}}e}Cb{}{{Cf{d}}}}{{}c{}}00{{}c{}}{{{f{{Cn{c}}}}}Db{}}{BlDb}{{}{{Cn{c}}}{}}{{ce}{{Cn{c}}}{DfDd}{{Cf{j}}}}{{{Ab{c}}e}{{Cj{{Cn{c}}}}}{}{{Cf{j}}}}{{{f{lDb}}}{{Cj{c}}}{}}{{{f{{Cn{c}}}}Bl}Db{}}0{{{f{l{Cn{c}}}}ec}{{Ad{cDh}}}{}{{Cf{d}}}}{{{f{l{Cn{c}}}}BlcAn}{{Ad{AjBf}}}{DfDd}}{{{f{{Cn{c}}}}}d{}}{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{fAf}00","D":"C`","p":[[10,"PartialOrd",253],[5,"Point",110],[1,"reference",null,null,1],[1,"f64"],[8,"Vec2",0],[0,"mut"],[6,"BaseShape",19],[5,"Arc",19],[5,"Vec",254],[6,"Result",255,null,1],[5,"TypeId",256],[5,"Circle",39],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",257],[8,"Result",257],[1,"tuple",null,null,1],[5,"String",258],[6,"CollideDirection",60],[5,"Line",88],[5,"Rect",164],[10,"Linear",83],[1,"u32"],[1,"u64"],[1,"f32"],[10,"Into",259,null,1],[6,"Ordering",253],[6,"Option",260,null,1],[1,"array"],[5,"Vec2D",209],[1,"slice"],[5,"Vec2DIterator",209],[10,"Debug",257],[10,"Clone",261],[5,"IndexOutOfBoundsError",209]],"r":[[0,19],[1,39],[2,88],[3,110],[4,164],[6,209]],"b":[[48,"impl-Display-for-Circle"],[49,"impl-Debug-for-Circle"],[96,"impl-Display-for-Line"],[97,"impl-Debug-for-Line"],[113,"impl-Add-for-Point"],[114,"impl-Add%3Cf64%3E-for-Point"],[123,"impl-Div%3Cf64%3E-for-Point"],[124,"impl-Div-for-Point"],[130,"impl-Debug-for-Point"],[131,"impl-Display-for-Point"],[132,"impl-From%3Cf64%3E-for-Point"],[133,"impl-From%3C(u32,+u32)%3E-for-Point"],[134,"impl-From%3C(u64,+u64)%3E-for-Point"],[135,"impl-From%3C(f64,+f64)%3E-for-Point"],[137,"impl-From%3C(f32,+f32)%3E-for-Point"],[142,"impl-Mul%3Cf64%3E-for-Point"],[143,"impl-Mul-for-Point"],[153,"impl-Sub-for-Point"],[154,"impl-Sub%3Cf64%3E-for-Point"],[180,"impl-Debug-for-Rect"],[181,"impl-Display-for-Rect"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOUADgAAABsAIAASADQAAAA2ABEASgAKAFYAAABZAAoAZgAiAIoAAwCPACcAuAAAALsAJADjAAIA6QAUAA==","P":[[9,"T"],[11,""],[23,"T"],[29,"U"],[31,""],[33,"U,T"],[35,"U"],[37,""],[40,"T"],[42,""],[45,"T"],[46,""],[50,"T"],[51,""],[52,"U"],[53,""],[55,"T"],[56,""],[57,"U,T"],[58,"U"],[59,""],[65,"T"],[67,""],[68,"T"],[69,""],[71,"T"],[72,"U"],[73,""],[79,"T"],[80,"U,T"],[81,"U"],[82,""],[89,"T"],[91,""],[93,"T"],[94,""],[99,"T"],[100,"U"],[101,""],[105,"T"],[106,""],[107,"U,T"],[108,"U"],[109,""],[117,"T"],[119,""],[120,"T"],[121,""],[136,"T"],[137,""],[141,"U"],[142,""],[156,"T"],[157,""],[158,"U,T"],[159,"U"],[160,""],[173,"T"],[175,""],[177,"T"],[178,""],[182,"T"],[183,""],[184,"U"],[185,""],[203,"T"],[204,""],[205,"U,T"],[206,"U"],[207,""],[212,"T"],[220,""],[221,"T"],[222,""],[223,"T"],[229,"U"],[232,"I"],[233,"T"],[234,""],[235,"T"],[238,"Iterator::Item"],[239,"T"],[244,"U,T"],[247,"U"],[250,""]]}],["mem",{"t":"PPGNNHHHNNNNN","n":["Binary","Decimal","Prefix","borrow","borrow_mut","format","format_binary","format_decimal","from","into","try_from","try_into","type_id"],"q":[[0,"mem"],[13,"alloc::string"],[14,"core::result"],[15,"core::any"]],"i":"h0`00```00000","f":"```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{f{b{h}}}j}{fj}0{cc{}}{{}c{}}{c{{l{e}}}{}{}}{{}{{l{c}}}{}}{bn}","D":"d","p":[[1,"reference",null,null,1],[0,"mut"],[1,"u64"],[6,"Prefix",0],[5,"String",13],[6,"Result",14,null,1],[5,"TypeId",15]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAsAAgAAAAgACwACAA==","P":[[3,"T"],[5,""],[8,"T"],[9,"U"],[10,"U,T"],[11,"U"],[12,""]]}],["networking",{"t":"EEEEECCCCCGPPNNNNNNNNNNNNNKNNNNNNPPPPPPPFFFGGPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNONNNNNNNNNNNNNNNNNNNNPPSFPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNFENNNNNNNCNNNNNNNNNNNNNNNNNNNFFFNNNNNNONNNNNNNNNNNNOONNNNNNNNNOONNNNNNNNNNNN","n":["Message","NetworkError","NetworkStats","Proxy","Socket","error","message","proxy","socket","stats","NetworkError","Proxy","Socket","borrow","borrow_mut","fmt","","from","","","into","source","to_string","try_from","try_into","type_id","Message","default_exit","default_ping","default_pong","is_exit","is_ping","is_pong","ChannelRecv","ChannelSend","Config","ConnectionResetError","Disconnected","Exit","Forward","Proxy","ProxyConfig","ProxyController","ProxyError","ProxyMessage","SocketRecv","SocketSend","addr","auto_reconnect","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","eq","","fmt","","","","from","","","","","into","","","","","is_connected","is_running","keep_msg_while_disconnected","recv","request_ping","run_tps","send","start_new","stat_cfg","stats","thread_handle","to_owned","to_string","try_from","","","","","try_into","","","","","try_recv","type_id","","","","","Deserialization","Exited","HEADER_SIZE","Header","Serialization","Socket","SocketError","StreamRead","StreamWrite","TestError","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deserialize","drop","fmt","","","from","","","into","","","local_addr","new","","recv","remote_addr","send","serialize","shutdown","size","to_owned","to_string","try_from","","","try_into","","","try_recv","type_id","","","NetworkStats","StatConfig","borrow","borrow_mut","bps_received_last_10_sec","bps_sent_last_10_sec","clone","clone_into","clone_to_uninit","config","default","from","get_rtt","into","new","on_bytes_recv","on_bytes_send","on_msg_recv","on_msg_send","received_last_10_sec","sent_last_10_sec","set_rtt","to_owned","total_received","total_sent","try_from","try_into","type_id","update","BpsConfig","RttConfig","StatConfig","borrow","","","borrow_mut","","","bps","clone","","","clone_into","","","clone_to_uninit","","","default","","","enabled","","fmt","","","from","","","into","","","ping_request_delay","rtt","to_owned","","","try_from","","","try_into","","","type_id","",""],"q":[[0,"networking"],[10,"networking::error"],[26,"networking::message"],[33,"networking::proxy"],[107,"networking::socket"],[158,"networking::stats"],[187,"networking::stats::config"],[234,"core::fmt"],[235,"networking::proxy::error"],[236,"core::error"],[237,"core::option"],[238,"alloc::string"],[239,"core::result"],[240,"core::any"],[241,"networking::proxy::config"],[242,"core::net::socket_addr"],[243,"networking::proxy::message"],[244,"core::cmp"],[245,"networking::proxy::controller"],[246,"std::sync::mpsc"],[247,"std::net::tcp"],[248,"std::thread"],[249,"serde::de"],[250,"core::time"],[251,"serde::ser"],[252,"core::clone"],[253,"threading::channel"]],"i":"```````````f00000000000000`Aj00000n00Bf100`````11An0BlEb24310243222432443102431024311211210211241024310243110243l0``0``000DbCn210200001022102102110111010021021021102``Ch000000`0000000000000000000```DnE`Cf21002102102102102121021021010210210210210","f":"`````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}{b{dh}}}j}0{cc{}}{lf}{nf}{{}c{}}{{{b{f}}}{{Ab{{b{A`}}}}}}{bAd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}`{{}Aj}00{{{b{Aj}}}Al}00``````````````{AnB`}{AnAl}?????>>>>>{{{b{An}}}An}{{b{b{dc}}}Bb{}}{{bBd}Bb}{{{b{n}}{b{n}}}Al}{{{b{{Bf{c}}}}{b{{Bf{c}}}}}Al{BhAj}}{{{b{An}}{b{dh}}}j}{{{b{n}}{b{dh}}}j}0{{{b{{Bf{c}}}}{b{dh}}}j{BjAj}}{cc{}}0000{{}c{}}0000{{{b{{Bl{ce}}}}}AlAjAj}0;{{{b{{Bl{ce}}}}}{{Af{{Bf{c}}Bn}}}AjAj}{{{b{{Bl{ce}}}}}{{Af{Bb{C`{e}}}}}AjAj}{AnCb}{{{b{{Bl{ce}}}}e}{{Af{Bb{C`{e}}}}}AjAj}{{An{Ab{Cd}}}{{Bl{ce}}}AjAj}{AnCf}{{{b{d{Bl{ce}}}}}{{b{{Ch{ce}}}}}AjAj}{{{b{{Bl{ce}}}}}{{b{{Cj{Bb}}}}}AjAj}{bc{}}{bAd}{c{{Af{e}}}{}{}}0000{{}{{Af{c}}}{}}0000{{{b{{Bl{ce}}}}}{{Af{{Bf{c}}Cl}}}AjAj}{bAh}0000``{{}Cb}```````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Cn}}}Cn}{{b{b{dc}}}Bb{}}{{bBd}Bb}{c{{Af{Cn}}}D`}{{{b{d{Db{ce}}}}}BbAjAj}{{{b{Cn}}{b{dh}}}j}{{{b{l}}{b{dh}}}j}0{cc{}}00{{}c{}}00{{{b{{Db{ce}}}}}B`AjAj}{Cd{{Db{ce}}}AjAj}{CbCn}{{{b{d{Db{ce}}}}Dd}{{Af{{Df{Cnc}}l}}}AjAj}3{{{b{d{Db{ce}}}}e}{{Af{Cnl}}}AjAj}{{{b{Cn}}c}AfDh}{{{b{{Db{ce}}}}}BbAjAj}{CnCb}{bc{}}{bAd}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{d{Db{ce}}}}}{{Af{{Df{Cnc}}l}}}AjAj}{bAh}00``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Ch{ce}}}}}CbAjAj}0{{{b{{Ch{ce}}}}}{{Ch{ce}}}{DjAj}{DjAj}}{{b{b{dc}}}Bb{}}{{bBd}Bb}`{{}{{Ch{ce}}}AjAj}{cc{}}{{{b{{Ch{ce}}}}}DdAjAj}{{}c{}}{Cf{{Ch{ce}}}AjAj}{{{b{d{Ch{ce}}}}{b{Cn}}}BbAjAj}0{{{b{d{Ch{ce}}}}{b{c}}{b{d{Db{ce}}}}}BbAjAj}{{{b{d{Ch{ce}}}}{b{e}}}BbAjAj};;{{{b{d{Ch{ce}}}}Dd}BbAjAj}{bc{}}=={c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAh}{{{b{d{Ch{ce}}}}{b{d{Dl{e{Bf{c}}}}}}{b{d{Db{ce}}}}}{{Af{Bbn}}}AjAj}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{CfDn}{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Cf}}}Cf}{{b{b{dc}}}Bb{}}00{{bBd}Bb}00{{}Dn}{{}E`}{{}Cf}{DnAl}{E`Al}{{{b{Dn}}{b{dh}}}j}{{{b{E`}}{b{dh}}}j}{{{b{Cf}}{b{dh}}}j}{cc{}}00{{}c{}}00{E`Dd}{CfE`}{bc{}}00{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{bAh}00","D":"Cf","p":[[1,"reference",null,null,1],[0,"mut"],[6,"NetworkError",10],[5,"Formatter",234],[8,"Result",234],[6,"SocketError",107],[6,"ProxyError",33,235],[10,"Error",236],[6,"Option",237,null,1],[5,"String",238],[6,"Result",239,null,1],[5,"TypeId",240],[10,"Message",26],[1,"bool"],[5,"ProxyConfig",33,241],[6,"SocketAddr",242],[1,"unit"],[1,"u8"],[6,"ProxyMessage",33,243],[10,"PartialEq",244],[10,"Debug",234],[5,"ProxyController",33,245],[5,"RecvError",246],[5,"SendError",246],[1,"u64"],[5,"TcpStream",247],[5,"StatConfig",187],[5,"NetworkStats",158],[5,"JoinHandle",248],[6,"TryRecvError",246],[5,"Header",107],[10,"Deserializer",249],[5,"Socket",107],[5,"Duration",250],[1,"tuple",null,null,1],[10,"Serializer",251],[10,"Clone",252],[5,"Channel",253],[5,"BpsConfig",187],[5,"RttConfig",187],[5,"Proxy",33]],"r":[[0,26],[1,10],[2,158],[3,33],[4,107],[33,235],[34,235],[35,235],[36,243],[37,235],[38,243],[39,243],[41,241],[42,245],[43,235],[44,243],[45,235],[46,235],[47,241],[48,241],[49,245],[51,241],[52,235],[53,243],[54,245],[56,241],[57,235],[58,243],[59,241],[60,241],[61,241],[62,235],[63,243],[64,241],[65,235],[66,235],[67,243],[68,245],[70,241],[71,235],[72,243],[73,245],[75,241],[76,235],[77,243],[78,245],[79,245],[80,241],[81,245],[82,245],[83,241],[84,245],[86,241],[87,245],[88,245],[89,241],[90,235],[91,245],[93,241],[94,235],[95,243],[96,245],[98,241],[99,235],[100,243],[101,245],[102,245],[104,241],[105,235],[106,243],[159,187]],"b":[[15,"impl-Display-for-NetworkError"],[16,"impl-Debug-for-NetworkError"],[18,"impl-From%3CSocketError%3E-for-NetworkError"],[19,"impl-From%3CProxyError%3E-for-NetworkError"],[65,"impl-Display-for-ProxyError"],[66,"impl-Debug-for-ProxyError"],[129,"impl-Debug-for-SocketError"],[130,"impl-Display-for-SocketError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAM8ACQAAABEAEwABABYACAAgACQATwA0AIoAHwCrAAAArQApAN0ADQA=","P":[[13,"T"],[15,""],[17,"T"],[18,""],[20,"U"],[21,""],[23,"U,T"],[24,"U"],[25,""],[49,"T"],[59,""],[60,"T"],[61,""],[63,"T"],[64,""],[67,"T"],[73,"U"],[78,"R,W"],[80,""],[81,"R,W"],[83,""],[84,"R,W"],[85,"SRCW,SWCR"],[86,""],[87,"R,W"],[89,"T"],[90,""],[91,"U,T"],[96,"U"],[101,"R,W"],[102,""],[117,"T"],[123,""],[124,"T"],[125,""],[126,"__D"],[127,"R,W"],[128,""],[131,"T"],[134,"U"],[137,"R,W"],[139,""],[140,"R,W"],[143,"__S"],[144,"R,W"],[145,""],[146,"T"],[147,""],[148,"U,T"],[151,"U"],[154,"R,W"],[155,""],[160,"T"],[162,"SRCW,SWCR"],[165,"T"],[166,""],[168,"SRCW,SWCR"],[169,"T"],[170,"SRCW,SWCR"],[171,"U"],[172,"SRCW,SWCR"],[180,"T"],[181,"SRCW,SWCR"],[183,"U,T"],[184,"U"],[185,""],[186,"SRCW,SWCR"],[190,"T"],[196,""],[200,"T"],[203,""],[214,"T"],[217,"U"],[220,""],[222,"T"],[225,"U,T"],[228,"U"],[231,""]]}],["random",{"t":"HHHHHHH","n":["conflip","get","get_inc","pick","seed","set_seed","str"],"q":[[0,"random"],[7,"rand::distributions::uniform"],[8,"core::cmp"],[9,"core::fmt"],[10,"alloc::string"]],"i":"```````","f":"{{}b}{{cc}c{dfhj}}{{cc}c{dfjh}}{{{n{{l{c}}}}}{{n{c}}}j}{{}A`}{A`Ab}{AdAf}","D":"n","p":[[1,"bool"],[10,"SampleUniform",7],[10,"PartialEq",8],[10,"PartialOrd",8],[10,"Debug",9],[1,"slice"],[1,"reference",null,null,1],[1,"u64"],[1,"unit"],[1,"usize"],[5,"String",10]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA","P":[[1,"T"],[4,""]]}],["threading",{"t":"FNNNNNNNNNNNNNNNN","n":["Channel","borrow","borrow_mut","from","into","iter","new_pair","recv","recv_timeout","send","try_from","try_into","try_iter","try_recv","type_id","wait_for","wait_for_or_timeout"],"q":[[0,"threading"],[17,"threading::channel"],[18,"std::sync::mpsc"],[19,"core::cmp"],[20,"core::result"],[21,"core::time"],[22,"core::any"]],"i":"`f000000000000000","f":"`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{cc{}}{{}c{}}{{{b{{f{ce}}}}}{{h{c}}}jj}{{}{{l{{f{ce}}{f{ec}}}}}{}{}}{{{b{{f{ce}}}}}{{A`{cn}}}jj}{{{b{{f{ce}}}}Ab}{{A`{cAd}}}jj}{{{b{{f{ce}}}}e}{{A`{Af{Ah{e}}}}}jj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{{f{ce}}}}}{{Aj{c}}}jj}{{{b{{f{ce}}}}}{{A`{cAl}}}jj}{bAn}{{{b{{f{ce}}}}c}{{A`{Afn}}}jj}{{{b{{f{ce}}}}cAb}{{A`{AfAd}}}jj}","D":"Af","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Channel",0,17],[5,"Iter",18],[10,"PartialEq",19],[1,"tuple",null,null,1],[5,"RecvError",18],[6,"Result",20,null,1],[5,"Duration",21],[6,"RecvTimeoutError",18],[1,"unit"],[5,"SendError",18],[5,"TryIter",18],[6,"TryRecvError",18],[5,"TypeId",22]],"r":[[0,17],[1,17],[2,17],[3,17],[4,17],[5,17],[6,17],[7,17],[8,17],[9,17],[10,17],[11,17],[12,17],[13,17],[14,17],[15,17],[16,17]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAYAAwAAAAMACwABAA8AAAA=","P":[[1,"T"],[4,"U"],[5,"R,W"],[6,"W,R"],[7,"R,W"],[10,"U,T"],[11,"U"],[12,"R,W"],[14,""],[15,"R,W"]]}],["time",{"t":"FPPGNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHNNNNNNNNNNOOO","n":["DTDelay","Paused","Running","Stopwatch","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","ended","eq","fmt","","","format","fraction","from","","","into","","is_running","new","","read","restart","restart_custom_timeline","start","start_new","stop","time_since_ended","timeit","timeit_async","timeit_mut","to_owned","","to_string","try_from","","try_into","","type_id","","update","paused_since","runtime","start_time"],"q":[[0,"time"],[51,"time::Stopwatch"],[54,"core::fmt"],[55,"core::time"],[56,"alloc::string"],[57,"core::ops::function"],[58,"core::future::future"],[59,"core::result"],[60,"core::any"],[61,"std::time"]],"i":"`h0`f1010101010100011`0001011011001110```0110101010Bj0Bn","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{{bl}j}0{{}f}{{}h}{{{b{f}}}n}{{{b{f}}{b{f}}}n}{{{b{f}}{b{dA`}}}Ab}{{{b{h}}{b{dA`}}}Ab}0{{{b{Ad}}Af}Ah}{{{b{f}}}Aj}{cc{}}{Ajf}1{{}c{}}0{{{b{h}}}n}2:{{{b{h}}}Ad}{{{b{df}}}j}{{{b{df}}Aj}j}{{{b{dh}}}j}>08{e{{Al{cAd}}}{}{{B`{}{{An{c}}}}}}{g{{Al{cAd}}}{}{{Bb{}{{An{c}}}}}{{B`{}{{An{e}}}}}}{e{{Al{cAd}}}{}{{Bd{}{{An{c}}}}}}{bc{}}0{bAh}{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{bBh}09{BjBl}{BjAd}{BnBl}","D":"Bd","p":[[1,"reference",null,null,1],[0,"mut"],[5,"DTDelay",0],[6,"Stopwatch",0],[1,"unit"],[1,"u8"],[1,"bool"],[5,"Formatter",54],[8,"Result",54],[5,"Duration",55],[1,"i8"],[5,"String",56],[1,"f64"],[1,"tuple",null,null,1],[17,"Output"],[10,"FnOnce",57],[10,"Future",58,null,1],[10,"FnMut",57],[6,"Result",59,null,1],[5,"TypeId",60],[15,"Paused",51],[5,"Instant",61],[15,"Running",51]],"r":[],"b":[[19,"impl-Debug-for-Stopwatch"],[20,"impl-Display-for-Stopwatch"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQACQAAAAAAAgABAAUACwASAAMAHQAAAB8AAQAjAAIAKgAIADQAAgA=","P":[[4,"T"],[8,""],[10,"T"],[12,""],[23,"T"],[24,""],[25,"T"],[26,"U"],[28,""],[38,"T,F"],[41,"T"],[43,""],[44,"U,T"],[46,"U"],[48,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[183,2972,7968,640,7817,567,1353,1975]}