var searchIndex = new Map(JSON.parse('[["enum_variant_name",{"t":"Y","n":["VariantName"],"q":[[0,"enum_variant_name"]],"i":"`","f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["logger",{"t":"FNNNNNNHNNNHNNN","n":["LoggerConfig","add_filter","borrow","borrow_mut","default","fmt","from","init","into","new","set_level","test","try_from","try_into","type_id"],"q":[[0,"logger"],[15,"log"],[16,"core::fmt"],[17,"core::option"],[18,"core::result"],[19,"core::any"]],"i":"`b00000`000`000","f":"`{{b{f{d}}h}b}{f{{f{c}}}{}}{{{f{j}}}{{f{jc}}}{}}{{}b}{{{f{b}}{f{jl}}}n}{cc{}}{{b{A`{{f{d}}}}}Ab}{{}c{}}4{{bh}b}{{}Ab}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{fAf}","D":"d","p":[[5,"LoggerConfig",0],[1,"str"],[1,"reference"],[6,"LevelFilter",15],[0,"mut"],[5,"Formatter",16],[8,"Result",16],[6,"Option",17],[1,"unit"],[6,"Result",18],[5,"TypeId",19]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0AAwAAAAYACAAAAAoABQA="}],["math",{"t":"EEEEEIECCHCHCCCCCOOFGPPNNNNNNNNNNNNNNNNFNNNONNNNNNNNNNONNNNNGPPPPNNNNNNNNHHHHHHNNNNKMMNNFNNNNNNNNNNNNNNHNNNNNNTFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNHNOOFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Arc","Circle","Line","Point","Rect","Vec2","Vec2D","arc","circle","clamp","collision","get_distance","interpolation","line","point","rect","vec2d","x","y","Arc","BaseShape","Circle","Rect","borrow","","borrow_mut","","from","","into","","new","points","try_from","","try_into","","type_id","","Circle","borrow","borrow_mut","center","","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","new","radius","to_owned","to_string","try_from","try_into","type_id","CollideDirection","Down","Left","Right","Up","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","line_closest_pt","line_line","point_rect","rect_line","rect_rect","rect_rect_no_r","to_owned","try_from","try_into","type_id","Linear","interp","interp_between","normalize_interp","normalize_interp_between","Line","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","eq","fmt","","from","","into","new","new_rotated","rotate","","to_owned","to_string","try_from","try_into","type_id","ONE","Point","ZERO","add","","add_assign","as_angle","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","div","","div_assign","dot","eq","floor","floored","fmt","","from","","","","","","from_angle","interp","interp_between","into","mul","","mul_assign","neg","new","new_rotated","normalize","normalize_p2","partial_cmp","round","rounded","sub","","sub_assign","to_owned","to_string","try_from","try_into","two_points_angle","type_id","x","y","Rect","aa_botleft","aa_botright","aa_lines","aa_points","aa_points5","aa_topleft","aa_topright","add","borrow","borrow_mut","center","clone","clone_into","clone_to_uninit","eq","fmt","","from","height","into","is_aa","new","new_from_center","r_botleft","r_botright","r_lines","r_points","r_points5","r_topleft","r_topright","rotation","set_center","set_height","set_rotation","set_size","set_width","size","sub","to_owned","to_string","try_from","try_into","type_id","width","IndexOutOfBoundsError","Vec2D","Vec2DIterator","borrow","","","borrow_mut","","","contains_point","elems","eq","fmt","","from","","","get","get_mut","index_from_point","into","","","into_iter","iter","new","new_empty","new_from_element","new_from_vec","next","rect_iter","rect_iter_clamped","set","set_rect_from_elem","size","try_from","","","try_into","","","type_id","",""],"q":[[0,"math"],[19,"math::arc"],[39,"math::circle"],[60,"math::collision"],[83,"math::interpolation"],[88,"math::line"],[110,"math::point"],[164,"math::rect"],[209,"math::vec2d"],[253,"core::cmp"],[254,"alloc::vec"],[255,"core::result"],[256,"core::any"],[257,"core::fmt"],[258,"alloc::string"],[259,"core::convert"],[260,"core::option"],[261,"core::clone"]],"i":"`````````````````Cj0``l00n10101000101010`Af0000000000000000000`Bd00000000000``````0000`Bj000`Bf0000000000000`000000d`0000000000000000000000000000000000000`0000000000`000`Bh0000000000000000000000000000000000000000000```DdClCn21011010210111210010111011111210210210","f":"`````````{{ccc}cb}`{{{f{d}}{f{d}}}h}```````````{f{{f{c}}}{}}0{{{f{j}}}{{f{jc}}}{}}0{cc{}}0{{}c{}}0{{lh}n}{{{f{n}}}{{A`{d}}}}{c{{Ab{e}}}{}{}}0{{}{{Ab{c}}}{}}0{fAd}0`87{{{f{Af}}}d}`{{{f{Af}}}Af}{{f{f{jc}}}Ah{}}{fAh}{{{f{Af}}{f{Af}}}Aj}{{{f{Af}}{f{jAl}}}An}0<{{{B`{{B`{hh}}h}}}Af}<{{dh}Af}`{fc{}}{fBb}<;:`````{f{{f{c}}}{}}{{{f{j}}}{{f{jc}}}{}}{{{f{Bd}}}Bd}:9{{{f{Bd}}{f{jAl}}}An}{cc{}}{{}c{}}{{{f{Bf}}{f{d}}}d}{{{f{Bf}}{f{Bf}}}Aj}{{{f{d}}{f{Bh}}}Aj}{{{f{Bh}}{f{Bf}}}Aj}{{{f{Bh}}{f{Bh}}}Aj}0<{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{fAd}`{{{f{Bj}}h}Bj}{{BjBjh}Bj}{{{f{Bj}}hh}Bj}{{BjBjhh}Bj}`{f{{f{c}}}{}}{{{f{j}}}{{f{jc}}}{}}{{{f{Bf}}}d}{{{f{Bf}}}Bf}{{f{f{jc}}}Ah{}}{fAh}{{{f{Bf}}{f{Bf}}}Aj}{{{f{Bf}}{f{jAl}}}An}0{{{B`{{B`{hh}}{B`{hh}}}}}Bf}{cc{}}{{}c{}}{{dd}Bf}{{dhh}Bf}{{Bfh}Bf}{{{f{jBf}}h}Ah}{fc{}}{fBb}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{fAd}```{{dd}d}{{dh}d}{{{f{jd}}d}Ah}{{{f{d}}}h}{f{{f{c}}}{}}{{{f{j}}}{{f{jc}}}{}}{{{f{d}}}d}{{f{f{jc}}}Ah{}}{fAh}{{}d}897{{{f{d}}d}h}{{{f{d}}{f{d}}}Aj}{{{f{jd}}}Ah}6{{{f{d}}{f{jAl}}}An}0{hd}{{{B`{BlBl}}}d}{{{B`{BnBn}}}d}{{{B`{hh}}}d}{cc{}}{{{B`{C`C`}}}d}5{{{f{d}}h}d}{{ddh}d}{{}c{}}{{dh}d}{{dd}d}{{{f{jd}}d}Ah}{dd}{{hh}d}{{ceh}d{{Cb{d}}}{{Cb{d}}}}{{{f{jd}}}Ah}3{{{f{d}}{f{d}}}{{Cf{Cd}}}}1{{{f{d}}}d}786{fc{}}{fBb}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{{dd}h}{fAd}```{{{f{Bh}}}d}0{{{f{Bh}}}{{Ch{Bf}}}}{{{f{Bh}}}{{Ch{d}}}}022{{Bhd}Bh}{f{{f{c}}}{}}{{{f{j}}}{{f{jc}}}{}}5{{{f{Bh}}}Bh}{{f{f{jc}}}Ah{}}{fAh}{{{f{Bh}}{f{Bh}}}Aj}{{{f{Bh}}{f{jAl}}}An}0{cc{}}{{{f{Bh}}}h}{{}c{}}{{{f{Bh}}}Aj}{{ceg}Bh{{Cb{d}}}{{Cb{Cj}}}{{Cb{h}}}}{{ceg}Bh{{Cb{d}}}{{Cb{d}}}{{Cb{h}}}}{{{f{Bh}}}d}0{{{f{Bh}}}{{Ch{Bf}}}}{{{f{Bh}}}{{Ch{d}}}}0227{{{f{jBh}}c}Ah{{Cb{d}}}}{{{f{jBh}}c}Ah{{Cb{h}}}}0{{{f{jBh}}c}Ah{{Cb{Cj}}}}1{{{f{Bh}}}Cj}{{Bhd}Bh}{fc{}}{fBb}{c{{Ab{e}}}{}{}}{{}{{Ab{c}}}{}}{fAd}{{{f{Bh}}}h}```{f{{f{c}}}{}}00{{{f{j}}}{{f{jc}}}{}}00{{{f{{Cl{c}}}}e}Aj{}{{Cb{d}}}}{{{f{{Cl{c}}}}}{{f{{A`{c}}}}}{}}{{{f{Cn}}{f{Cn}}}Aj}{{{f{{Cl{c}}}}{f{jAl}}}AnD`}{{{f{Cn}}{f{jAl}}}An}{cc{}}00{{{f{{Cl{c}}}}e}{{Cf{{f{c}}}}}{}{{Cb{d}}}}{{{f{j{Cl{c}}}}e}{{Cf{{f{jc}}}}}{}{{Cb{d}}}}{{{f{{Cl{c}}}}e}Bn{}{{Cb{d}}}}{{}c{}}000{{{f{{Cl{c}}}}}Cn{}}{BhCn}{{}{{Cl{c}}}{}}{{ce}{{Cl{c}}}{DbD`}{{Cb{Cj}}}}{{{A`{c}}e}{{Cf{{Cl{c}}}}}{}{{Cb{Cj}}}}{{{f{jCn}}}{{Cf{c}}}{}}{{{f{{Cl{c}}}}Bh}Cn{}}0{{{f{j{Cl{c}}}}ec}{{Ab{cDd}}}{}{{Cb{d}}}}{{{f{j{Cl{c}}}}BhcAj}{{Ab{AhBb}}}{DbD`}}{{{f{{Cl{c}}}}}d{}}{c{{Ab{e}}}{}{}}00{{}{{Ab{c}}}{}}00{fAd}00","D":"C`","p":[[10,"PartialOrd",253],[5,"Point",110],[1,"reference"],[1,"f64"],[0,"mut"],[6,"BaseShape",19],[5,"Arc",19],[5,"Vec",254],[6,"Result",255],[5,"TypeId",256],[5,"Circle",39],[1,"unit"],[1,"bool"],[5,"Formatter",257],[8,"Result",257],[1,"tuple"],[5,"String",258],[6,"CollideDirection",60],[5,"Line",88],[5,"Rect",164],[10,"Linear",83],[1,"u32"],[1,"u64"],[1,"f32"],[10,"Into",259],[6,"Ordering",253],[6,"Option",260],[1,"array"],[8,"Vec2",0],[5,"Vec2D",209],[5,"Vec2DIterator",209],[10,"Debug",257],[10,"Clone",261],[5,"IndexOutOfBoundsError",209]],"r":[[0,19],[1,39],[2,88],[3,110],[4,164],[6,209]],"b":[[48,"impl-Display-for-Circle"],[49,"impl-Debug-for-Circle"],[96,"impl-Display-for-Line"],[97,"impl-Debug-for-Line"],[113,"impl-Add-for-Point"],[114,"impl-Add%3Cf64%3E-for-Point"],[123,"impl-Div%3Cf64%3E-for-Point"],[124,"impl-Div-for-Point"],[130,"impl-Debug-for-Point"],[131,"impl-Display-for-Point"],[132,"impl-From%3Cf64%3E-for-Point"],[133,"impl-From%3C(u32,+u32)%3E-for-Point"],[134,"impl-From%3C(u64,+u64)%3E-for-Point"],[135,"impl-From%3C(f64,+f64)%3E-for-Point"],[137,"impl-From%3C(f32,+f32)%3E-for-Point"],[142,"impl-Mul%3Cf64%3E-for-Point"],[143,"impl-Mul-for-Point"],[153,"impl-Sub-for-Point"],[154,"impl-Sub%3Cf64%3E-for-Point"],[180,"impl-Debug-for-Rect"],[181,"impl-Display-for-Rect"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOUADgAAABsAIAASADQAAAA2ABEASgAKAFYAAABZAAoAZgAiAIoAAwCPACcAuAAAALsAJADjAAIA6QAUAA=="}],["mem",{"t":"H","n":["display_bytes"],"q":[[0,"mem"],[1,"alloc::string"]],"i":"`","f":"{bd}","D":"`","p":[[1,"u64"],[5,"String",1]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAAAAQA="}],["networking",{"t":"EEEEECCCCCGPPNNNNNNNNNNNNNNNNNKNNNNNNPPPPPPPFFFGGPPOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNONNONNNNNNNNNNNNNNNNNNNNPPSFPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNFENNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNOONNNNNNNNNNNN","n":["Message","NetworkError","NetworkStats","Proxy","Socket","error","message","proxy","socket","stats","NetworkError","Proxy","Socket","borrow","borrow_mut","deref","deref_mut","drop","fmt","","from","","","init","into","source","to_string","try_from","try_into","type_id","Message","default_exit","default_ping","default_pong","is_exit","is_ping","is_pong","ChannelRecv","ChannelSend","Config","ConnectionResetError","Disconnected","Exit","Forward","Proxy","ProxyConfig","ProxyController","ProxyError","ProxyMessage","SocketRecv","SocketSend","addr","auto_reconnect","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","deref","","","","","deref_mut","","","","","drop","","","","","eq","","fmt","","","","from","","","","","init","","","","","into","","","","","is_connected","is_running","keep_msg_while_disconnected","recv","request_ping","run_tps","send","start_new","stat_cfg","stats","thread_handle","to_owned","to_string","try_from","","","","","try_into","","","","","try_recv","type_id","","","","","Deserialization","Exited","HEADER_SIZE","Header","Serialization","Socket","SocketError","StreamRead","StreamWrite","TestError","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","","fmt","","","from","","","init","","","into","","","local_addr","new","","recv","remote_addr","send","serialize","shutdown","size","to_owned","to_string","try_from","","","try_into","","","try_recv","type_id","","","NetworkStats","StatConfig","borrow","borrow_mut","bps_received_last_10_sec","bps_sent_last_10_sec","clone","clone_into","clone_to_uninit","config","default","deref","deref_mut","drop","from","get_rtt","init","into","new","on_bytes_recv","on_bytes_send","on_msg_recv","on_msg_send","received_last_10_sec","sent_last_10_sec","set_rtt","to_owned","total_received","total_sent","try_from","try_into","type_id","update","BpsConfig","RttConfig","StatConfig","borrow","","","borrow_mut","","","bps","clone","","","clone_into","","","clone_to_uninit","","","default","","","deref","","","deref_mut","","","drop","","","enabled","","fmt","","","from","","","init","","","into","","","ping_request_delay","rtt","to_owned","","","try_from","","","try_into","","","type_id","",""],"q":[[0,"networking"],[10,"networking::error"],[30,"networking::message"],[37,"networking::proxy"],[131,"networking::socket"],[194,"networking::stats"],[227,"networking::stats::config"],[286,"core::fmt"],[287,"networking::proxy::error"],[288,"core::error"],[289,"core::option"],[290,"alloc::string"],[291,"core::result"],[292,"core::any"],[293,"networking::proxy::config"],[294,"networking::proxy::message"],[295,"core::cmp"],[296,"networking::proxy::controller"],[297,"std::sync::mpsc"],[298,"std::net::tcp"],[299,"std::thread"],[300,"serde::de"],[301,"core::net::socket_addr"],[302,"core::time"],[303,"serde::ser"],[304,"core::clone"],[305,"threading::channel"]],"i":"```````````j000000000000000000`An00000A`00Bd100`````11Bb0BjEb2431024322210243102431024343244310243102431024311211210211241024310243110243Ab0``0``000ClCh210200010210201102022102102102110111010021021021102``Cb000000`00000000000000000000000```DnE`Dj21002102102102102102102102121021021021010210210210210","f":"`````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{{{b{j}}{b{dl}}}n}0{cc{}}{A`j}{Abj}{{}f}{{}c{}}{{{b{j}}}{{Af{{b{Ad}}}}}}{bAh}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}`{{}An}00{{{b{An}}}B`}00````````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{Bb}}}Bb}{{b{b{dc}}}h{}}{bh}{f{{b{c}}}{}}0000{f{{b{dc}}}{}}0000{fh}0000{{{b{A`}}{b{A`}}}B`}{{{b{{Bd{c}}}}{b{{Bd{c}}}}}B`{BfAn}}{{{b{Bb}}{b{dl}}}n}{{{b{A`}}{b{dl}}}n}0{{{b{{Bd{c}}}}{b{dl}}}n{BhAn}}{cc{}}0000{{}f}0000{{}c{}}0000{{{b{{Bj{ce}}}}}B`AnAn}0`{{{b{{Bj{ce}}}}}{{Aj{{Bd{c}}Bl}}}AnAn}{{{b{{Bj{ce}}}}}{{Aj{h{Bn{e}}}}}AnAn}`{{{b{{Bj{ce}}}}e}{{Aj{h{Bn{e}}}}}AnAn}{{Bb{Af{C`}}}{{Bj{ce}}}AnAn}`{{{b{d{Bj{ce}}}}}{{b{{Cb{ce}}}}}AnAn}{{{b{{Bj{ce}}}}}{{b{{Cd{h}}}}}AnAn}{bc{}}{bAh}{c{{Aj{e}}}{}{}}0000{{}{{Aj{c}}}{}}0000{{{b{{Bj{ce}}}}}{{Aj{{Bd{c}}Cf}}}AnAn}{bAl}0000``````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Ch}}}Ch}{{b{b{dc}}}h{}}{bh}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{c{{Aj{Ch}}}Cj}{{{b{d{Cl{ce}}}}}hAnAn}{fh}00{{{b{Ch}}{b{dl}}}n}{{{b{Ab}}{b{dl}}}n}0{cc{}}00{{}f}00{{}c{}}00{{{b{{Cl{ce}}}}}CnAnAn}{C`{{Cl{ce}}}AnAn}{D`Ch}{{{b{d{Cl{ce}}}}Db}{{Aj{{Dd{Chc}}Ab}}}AnAn}3{{{b{d{Cl{ce}}}}e}{{Aj{ChAb}}}AnAn}{{{b{Ch}}c}AjDf}{{{b{{Cl{ce}}}}}hAnAn}`{bc{}}{bAh}{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{{{b{d{Cl{ce}}}}}{{Aj{{Dd{Chc}}Ab}}}AnAn}{bAl}00``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Cb{ce}}}}}D`AnAn}0{{{b{{Cb{ce}}}}}{{Cb{ce}}}{DhAn}{DhAn}}{{b{b{dc}}}h{}}{bh}`{{}{{Cb{ce}}}AnAn}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{{{b{{Cb{ce}}}}}DbAnAn}{{}f}{{}c{}}{Dj{{Cb{ce}}}AnAn}{{{b{d{Cb{ce}}}}{b{Ch}}}hAnAn}0{{{b{d{Cb{ce}}}}{b{c}}{b{d{Cl{ce}}}}}hAnAn}{{{b{d{Cb{ce}}}}{b{e}}}hAnAn}??{{{b{d{Cb{ce}}}}Db}hAnAn}{bc{}}{{{b{{Cb{ce}}}}}D`AnAn}0{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{bAl}{{{b{d{Cb{ce}}}}{b{d{Dl{e{Bd{c}}}}}}{b{d{Cl{ce}}}}}{{Aj{hA`}}}AnAn}```{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00`{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Dj}}}Dj}{{b{b{dc}}}h{}}00{bh}00{{}Dn}{{}E`}{{}Dj}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{fh}00``{{{b{Dn}}{b{dl}}}n}{{{b{E`}}{b{dl}}}n}{{{b{Dj}}{b{dl}}}n}{cc{}}00{{}f}00{{}c{}}00``{bc{}}00{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{bAl}00","D":"Cf","p":[[1,"reference"],[0,"mut"],[1,"usize"],[1,"unit"],[6,"NetworkError",10],[5,"Formatter",286],[8,"Result",286],[6,"ProxyError",37,287],[6,"SocketError",131],[10,"Error",288],[6,"Option",289],[5,"String",290],[6,"Result",291],[5,"TypeId",292],[10,"Message",30],[1,"bool"],[5,"ProxyConfig",37,293],[6,"ProxyMessage",37,294],[10,"PartialEq",295],[10,"Debug",286],[5,"ProxyController",37,296],[5,"RecvError",297],[5,"SendError",297],[5,"TcpStream",298],[5,"NetworkStats",194],[5,"JoinHandle",299],[6,"TryRecvError",297],[5,"Header",131],[10,"Deserializer",300],[5,"Socket",131],[6,"SocketAddr",301],[1,"u64"],[5,"Duration",302],[1,"tuple"],[10,"Serializer",303],[10,"Clone",304],[5,"StatConfig",227],[5,"Channel",305],[5,"BpsConfig",227],[5,"RttConfig",227],[5,"Proxy",37]],"r":[[0,30],[1,10],[2,194],[3,37],[4,131],[45,293],[46,296],[47,287],[48,294],[195,227]],"b":[[18,"impl-Debug-for-NetworkError"],[19,"impl-Display-for-NetworkError"],[21,"impl-From%3CProxyError%3E-for-NetworkError"],[22,"impl-From%3CSocketError%3E-for-NetworkError"],[84,"impl-Display-for-ProxyError"],[85,"impl-Debug-for-ProxyError"],[162,"impl-Display-for-SocketError"],[163,"impl-Debug-for-SocketError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAAMBDAAAABQAFgACABoACAAkADMAXQAEAGcAPQCoAAIArgAiANIAAQDVADIACwECABEBDQA="}],["random",{"t":"HHHHHHH","n":["conflip","get","get_inc","pick","seed","set_seed","str"],"q":[[0,"random"],[7,"rand::distributions::uniform"],[8,"core::cmp"],[9,"core::fmt"],[10,"alloc::string"]],"i":"```````","f":"{{}b}{{cc}c{dfhj}}{{cc}c{dfjh}}{{{n{{l{c}}}}}{{n{c}}}j}{{}A`}{A`Ab}{AdAf}","D":"n","p":[[1,"bool"],[10,"SampleUniform",7],[10,"PartialEq",8],[10,"PartialOrd",8],[10,"Debug",9],[1,"slice"],[1,"reference"],[1,"u64"],[1,"unit"],[1,"usize"],[5,"String",10]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["threading",{"t":"FENNNNNNNNNNCNNNNNNNNNNIPPFGPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Channel","ThreadPool","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","iter","new_pair","pool","recv","recv_timeout","send","try_from","try_into","try_iter","try_recv","type_id","wait_for","wait_for_or_timeout","ArcFuture","Done","Flying","Future","FutureState","Panicked","Started","ThreadPool","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","deref_mut","","","drop","","","eq","flying_tasks_count","fmt","from","","","init","","","into","","","is_done","new","output","run","state","to_owned","","try_from","","","try_into","","","type_id","","","wait"],"q":[[0,"threading"],[23,"threading::pool"],[82,"threading::channel"],[83,"std::sync::mpsc"],[84,"core::cmp"],[85,"core::result"],[86,"core::time"],[87,"core::any"],[88,"threading::pool::future"],[89,"core::fmt"],[90,"core::marker"],[91,"core::ops::function"],[92,"core::panic::unwind_safe"]],"i":"``j000000000`0000000000`Bb0``00`Bf1Bd120202020112012012020212012012010101201201201201","f":"``{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{f{{b{c}}}{}}{f{{b{dc}}}{}}{fh}{cc{}}{{}f}{{}c{}}{{{b{{j{ce}}}}}{{l{c}}}nn}{{}{{A`{{j{ce}}{j{ec}}}}}{}{}}`{{{b{{j{ce}}}}}{{Ad{cAb}}}nn}{{{b{{j{ce}}}}Af}{{Ad{cAh}}}nn}{{{b{{j{ce}}}}e}{{Ad{h{Aj{e}}}}}nn}{c{{Ad{e}}}{}{}}{{}{{Ad{c}}}{}}{{{b{{j{ce}}}}}{{Al{c}}}nn}{{{b{{j{ce}}}}}{{Ad{cAn}}}nn}{bB`}{{{b{{j{ce}}}}c}{{Ad{hAb}}}nn}{{{b{{j{ce}}}}cAf}{{Ad{hAh}}}nn}````````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{Bb}}}Bb}{{{b{Bd}}}Bd}{{b{b{dc}}}h{}}0{bh}0{{}{{Bf{c}}}{}}{f{{b{c}}}{}}00{f{{b{dc}}}{}}00{fh}00{{{b{Bb}}{b{Bb}}}Bh}{{{b{Bd}}}Bj}{{{b{Bb}}{b{dBl}}}Bn}{cc{}}00{{}f}00{{}c{}}00{{{b{{Bf{c}}}}}Bh{}}{BjBd}{{{b{{Bf{c}}}}}c{}}{{{b{Bd}}e}{{C`{c}}}Cb{{Cf{}{{Cd{c}}}}CbCh}}{{{b{{Bf{c}}}}}Bb{}}{bc{}}0{c{{Ad{e}}}{}{}}00{{}{{Ad{c}}}{}}00{bB`}00{{{b{{Bf{c}}}}}h{}}","D":"Cn","p":[[1,"reference"],[0,"mut"],[1,"usize"],[1,"unit"],[5,"Channel",0,82],[5,"Iter",83],[10,"PartialEq",84],[1,"tuple"],[5,"RecvError",83],[6,"Result",85],[5,"Duration",86],[6,"RecvTimeoutError",83],[5,"SendError",83],[5,"TryIter",83],[6,"TryRecvError",83],[5,"TypeId",87],[6,"FutureState",23,88],[5,"ThreadPool",23],[5,"Future",23,88],[1,"bool"],[1,"u16"],[5,"Formatter",89],[8,"Result",89],[8,"ArcFuture",23],[10,"Send",90],[17,"Output"],[10,"FnOnce",91],[10,"UnwindSafe",92]],"r":[[0,82],[1,23],[26,88],[27,88]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMACgAAAAcACQAAAA0AAAARAAEAFQAAABgAAAAgABYAOAAAADwAAgBHAAoA"}],["time",{"t":"FPPGNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHNNNNNNNNNNOOO","n":["DTDelay","Paused","Running","Stopwatch","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","ended","eq","fmt","","","format","fraction","from","","","into","","is_running","new","","read","restart","restart_custom_timeline","start","start_new","stop","time_since_ended","timeit","timeit_async","timeit_mut","to_owned","","to_string","try_from","","try_into","","type_id","","update","paused_since","runtime","start_time"],"q":[[0,"time"],[51,"time::Stopwatch"],[54,"core::fmt"],[55,"core::time"],[56,"alloc::string"],[57,"core::ops::function"],[58,"core::future::future"],[59,"core::result"],[60,"core::any"]],"i":"`h0`f1010101010100011`0001011011001110```0110101010Bh0Bj","f":"````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{f}}}f}{{{b{h}}}h}{{b{b{dc}}}j{}}0{bj}0{{}f}{{}h}{{{b{f}}}l}{{{b{f}}{b{f}}}l}{{{b{f}}{b{dn}}}A`}{{{b{h}}{b{dn}}}A`}0{{AbAd}Af}{{{b{f}}}Ah}{cc{}}{Ahf}1{{}c{}}0{{{b{h}}}l}2:{{{b{h}}}Ab}{{{b{df}}}j}{{{b{df}}Ah}j}{{{b{dh}}}j}>08{e{{Aj{cAb}}}{}{{An{}{{Al{c}}}}}}{g{{Aj{cAb}}}{}{{B`{}{{Al{c}}}}}{{An{}{{Al{e}}}}}}{e{{Aj{cAb}}}{}{{Bb{}{{Al{c}}}}}}{bc{}}0{bAf}{c{{Bd{e}}}{}{}}0{{}{{Bd{c}}}{}}0{bBf}09```","D":"Bd","p":[[1,"reference"],[0,"mut"],[5,"DTDelay",0],[6,"Stopwatch",0],[1,"unit"],[1,"bool"],[5,"Formatter",54],[8,"Result",54],[5,"Duration",55],[1,"i8"],[5,"String",56],[1,"f64"],[1,"tuple"],[17,"Output"],[10,"FnOnce",57],[10,"Future",58],[10,"FnMut",57],[6,"Result",59],[5,"TypeId",60],[15,"Paused",51],[15,"Running",51]],"r":[],"b":[[19,"impl-Debug-for-Stopwatch"],[20,"impl-Display-for-Stopwatch"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACQACQAAAAAAAgABAAUACwASAAMAHQAAAB8AAQAjAAIAKgAIADQAAgA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[176,729,7058,202,6976,534,2555,1732]}